/* Shorthand to importing all files in Sass folders with @import */
/* GRID TRICK!
  When we syntax with "items", it indicates the individual items inside the grid cells/areas.
  When we syntax with "contents", it indicates the tracks for rows & columns.
  When we syntax with "align", it indicates the vertical direction or Y-axis .
  When we syntax with "justify", it indicates the horizontal direction or X-axis. */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 62.5%; }
  @media (max-width: 75em) {
    html {
      font-size: 50%; } }

body {
  font-family: "Nunito", sans-serif;
  color: #6d5d4b;
  font-weight: 300;
  line-height: 1.6; }

.container {
  display: grid;
  /* The default is auto, setting min-content will achieve the same result.
  We use 40vw because we want it decrese when vw decrease for responsiveness.
  Jonas said usually we don't name the row or even custome it, we usually just want to fit the content. */
  grid-template-rows: 80vh -webkit-min-content 40vw repeat(3, -webkit-min-content);
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(5rem, 1fr) [center-start] repeat(8, [col-start] minmax(-webkit-min-content, 14rem) [col-end]) [center-end] minmax(5rem, 1fr) [full-end];
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(5rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(5rem, 1fr) [full-end]; }
  @media (max-width: 62.5em) {
    .container {
      /* For responsiveness, we remove the 1st column and add a new row to accommodate the side bar. */
      grid-template-rows: 6rem 80vh -webkit-min-content 40vw repeat(3, -webkit-min-content);
      grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
      grid-template-columns: [full-start] minmax(5rem, 1fr) [center-start] repeat(8, [col-start] minmax(-webkit-min-content, 14rem) [col-end]) [center-end] minmax(5rem, 1fr) [full-end];
      grid-template-columns: [full-start] minmax(5rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(5rem, 1fr) [full-end]; } }
  @media (max-width: 50em) {
    .container {
      /* We remove all the other grid row values because we let the row algorithm to handle implicit rows. */
      grid-template-rows: 6rem calc(100vh - 6rem); } }

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400; }

.heading-1 {
  font-size: 4.5rem;
  color: #f9f7f6;
  line-height: 1; }

.heading-2 {
  font-size: 4rem;
  font-style: italic;
  line-height: 1; }
  .heading-2--light {
    color: #f9f7f6; }
  .heading-2--dark {
    color: #54483a; }

.heading-3 {
  font-size: 1.6rem;
  color: #c69963;
  text-transform: uppercase; }

.heading-4 {
  font-size: 1.9rem; }
  .heading-4--light {
    color: #f9f7f6; }
  .heading-4--dark {
    color: #54483a; }

.btn {
  background-color: #c69963;
  color: #fff;
  border: none;
  border-radius: 0;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  -webkit-transition: all 0.2s;
  transition: all 0.2s; }
  .btn:hover {
    background-color: #b28451; }

/* These are for the use of Atomic CSS style where it will have many "helper" classes to style the page when needed. */
.mb-sm {
  margin-bottom: 2rem; }

.mb-md {
  margin-bottom: 3rem; }

.mb-lg {
  margin-bottom: 4rem; }

.mb-hg {
  margin-bottom: 8rem; }

.sidebar {
  background-color: #c69963;
  grid-column: sidebar-start / sidebar-end;
  grid-row: 1 / -1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  @media (max-width: 62.5em) {
    .sidebar {
      grid-column: 1 / -1;
      grid-row: 1 / 2;
      -webkit-box-pack: end;
          -ms-flex-pack: end;
              justify-content: flex-end;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; } }

/* Here we make the button looks like an icon using pseudo elements. */
.nav-btn {
  border: none;
  border-radius: 0;
  background-color: #fff;
  height: 2px;
  width: 4.5rem;
  margin-top: 4rem; }
  .nav-btn::before, .nav-btn::after {
    content: "";
    display: block;
    background-color: #fff;
    height: 2px;
    width: 4.5rem; }
  .nav-btn::before {
    -webkit-transform: translateY(-1.5rem);
            transform: translateY(-1.5rem); }
  .nav-btn::after {
    -webkit-transform: translateY(1.3rem);
            transform: translateY(1.3rem); }
  @media (max-width: 62.5em) {
    .nav-btn {
      margin-top: 0;
      margin-right: 3rem; }
      .nav-btn::before {
        -webkit-transform: translateY(-1.2rem);
                transform: translateY(-1.2rem); }
      .nav-btn::after {
        -webkit-transform: translateY(1rem);
                transform: translateY(1rem); } }

.header {
  grid-column: full-start / col-end 6;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(16, 29, 44, 0.93)), to(rgba(16, 29, 44, 0.93))), url(../img/hero.jpeg);
  background-image: linear-gradient(rgba(16, 29, 44, 0.93), rgba(16, 29, 44, 0.93)), url(../img/hero.jpeg);
  /* Setting cover will scale the background image to be as large as possible so that the background area is completely covered by the background image. Some parts of the background image may not be in view within the background positioning area.
  stackoverflow explained well the difference between contain & cover here:
  https://stackoverflow.com/questions/27939971/difference-between-background-sizecover-and-background-sizecontain */
  background-size: cover;
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;
  display: grid;
  /* Here we don't want the element's height between 6rem  (and not less) and the height that it need to occupy (which might be more than 6rem ). */
  grid-template-rows: 1fr -webkit-min-content minmax(6rem, -webkit-min-content) 1fr;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
  /* This is to make the logo center to the h1 tagline, not to its container width.
  We use minmax() function here for responsive purpose.
  Notice we also can use min or max-content inside minmax() function. */
  grid-template-columns: minmax(-webkit-min-content, -webkit-max-content);
  grid-template-columns: minmax(min-content, max-content);
  row-gap: 1.5rem;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  @media (max-width: 50em) {
    .header {
      /* This is same as grid-column: full-start / full-end; */
      grid-column: 1 / -1; } }
  @media (max-width: 37.5em) {
    .header {
      padding: 5rem; } }
  .header__logo {
    height: 3rem;
    justify-self: center; }
  .header__btn {
    -ms-flex-item-align: start;
        align-self: start;
    justify-self: start; }
  .header__seenon-text {
    font-size: 1.6rem;
    color: #aaa;
    display: grid;
    grid-template-columns: 1fr -webkit-max-content 1fr;
    grid-template-columns: 1fr max-content 1fr;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-column-gap: 1.5rem;
       -moz-column-gap: 1.5rem;
            column-gap: 1.5rem; }
    .header__seenon-text::before, .header__seenon-text::after {
      content: '';
      height: 1px;
      /* We set to block because pseudo element is inline element */
      display: block;
      background-color: currentColor; }
  .header__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    -webkit-column-gap: 1.2rem;
       -moz-column-gap: 1.2rem;
            column-gap: 1.2rem;
    justify-items: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .header__seenon-logos img {
      /* Here we specify the height can be at max 2.5rem, but even more, it can be scaled down if necessary. */
      max-height: 2.5rem;
      /* Then we have the width react accordingly to the height and it can be scaled down if necessary. The reason we want to specify here because IF the width of image at certain view port has corresponding height lower than 2.5rem, then the lower value from the width will take into account while maintaining the aspect ratio. */
      max-width: 100%;
      /* Brightness can apply effect for brightness just the way like our smartphone. */
      -webkit-filter: brightness(70%);
              filter: brightness(70%); }

.realtors {
  background-color: #101d2c;
  grid-column: col-start 7 / full-end;
  padding: 3rem;
  display: grid;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center;
  justify-items: center;
  row-gap: 2rem; }
  @media (max-width: 50em) {
    .realtors {
      grid-column: 1 / -1; } }
  .realtors__list {
    display: grid;
    grid-template-columns: -webkit-min-content -webkit-max-content;
    grid-template-columns: min-content max-content;
    -webkit-column-gap: 2rem;
       -moz-column-gap: 2rem;
            column-gap: 2rem;
    row-gap: 5vh;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    @media (max-width: 50em) {
      .realtors__list {
        /* Notice we can repeat multiple column tracks. We end up with 6 column tracks here. */
        grid-template-columns: repeat(3, -webkit-min-content -webkit-max-content);
        grid-template-columns: repeat(3, min-content max-content);
        /* Why code below won't work? Because minmax() function only can be used within: 
      -> grid-template-columns
      -> grid-template-rows
      -> grid-auto-columns
      -> grid-auto-rows */ } }
    @media (max-width: 37.5em) {
      .realtors__list {
        grid-template-columns: -webkit-min-content -webkit-max-content;
        grid-template-columns: min-content max-content; } }
  .realtors__img {
    width: 7rem;
    border-radius: 50%;
    /* I think this is to prevent the tiny white space appear at the bottom from its parent element (grid area). */
    display: block; }
  .realtors__sold {
    text-transform: uppercase;
    color: #aaa;
    margin-top: -3px; }

.features {
  grid-column: center-start / center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  gap: 6rem;
  /* Why put this here instead in .feature???
  Because .feature grid items will depend on its parent grid, which is .features and this parent has stretch value by default for align-items. So no matter how you align items in .features, it will always be stretched to accommodate its whole area.
  This explained well: https://www.udemy.com/course/advanced-css-and-sass/learn/lecture/8859716#questions/5367886 */
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: start; }
  @media (max-width: 50em) {
    .features {
      margin: 8rem auto; } }

.feature {
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  row-gap: 1.5rem;
  -webkit-column-gap: 2.5rem;
     -moz-column-gap: 2.5rem;
          column-gap: 2.5rem; }
  .feature__icon {
    fill: #c69963;
    width: 4.5rem;
    height: 4.5rem;
    grid-row: 1 / span 2;
    -webkit-transform: translateY(-1rem);
            transform: translateY(-1rem); }
  .feature__text {
    font-size: 1.7rem; }

.story__pictures {
  /* Actually we can use url(/img/back.jpg) without the double dots. Because this means the lookup will start from root folder instead of specifying how many folders to move up. Sometimes, when we need to move up 2 folder levels, we need to use "../../" */
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(198, 153, 99, 0.5)), to(rgba(198, 153, 99, 0.5))), url(../img/back.jpg);
  background-image: linear-gradient(rgba(198, 153, 99, 0.5), rgba(198, 153, 99, 0.5)), url(../img/back.jpg);
  background-size: cover;
  grid-column: full-start / col-end 4;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(6, 1fr);
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  @media (max-width: 50em) {
    .story__pictures {
      grid-column: 1 / -1;
      padding: 6rem; } }

.story__img--1 {
  width: 100%;
  grid-area: 2/2/6/6;
  -webkit-box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.1);
          box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.1); }
  @media (max-width: 50em) {
    .story__img--1 {
      /* This is really confusing to play around the grid col & row. */
      grid-area: 1/1/-1/5; } }

.story__img--2 {
  width: 115%;
  grid-area: 4/4/6/7;
  /* Here the z-index works without specifying its position value because img--2 got fixed by grid-row and grid-column  properties which works similar to position:fixed. */
  z-index: 10;
  -webkit-box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.2); }
  @media (max-width: 50em) {
    .story__img--2 {
      grid-row: 1 / -1;
      width: 100%; } }

.story__content {
  background-color: #f9f7f6;
  grid-column: col-start 5 / full-end;
  padding: 6rem 8vw;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  /*  display: grid;
    align-content: center;
    justify-items: start; */ }
  @media (max-width: 50em) {
    .story__content {
      grid-column: 1 / -1;
      grid-row: 5 /6; } }
  .story__content .heading-3 {
    margin-bottom: 2rem; }
  .story__content .heading-2 {
    margin-bottom: 3rem; }

.story__text {
  font-size: 1.5rem;
  font-style: italic;
  margin-bottom: 4rem; }

.homes {
  grid-column: center-start / center-end;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  gap: 7rem;
  margin: 15rem 0; }

.home {
  /* Jonas suggest we try to start rely on implicit row structure first, if not then only code the explicte rows. */
  /* At the moment of this lecture, we can't style individual gap yet. */
  background-color: #f9f7f6;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  row-gap: 3.5rem; }
  .home__img {
    width: 100%;
    grid-column: 1/-1;
    grid-area: 1/1/2/3;
    z-index: 1; }
  .home__like {
    grid-area: 1/2/2/3;
    fill: #c69963;
    height: 2.5rem;
    width: 2.5rem;
    z-index: 2;
    justify-self: end;
    margin: 1rem; }
  .home__name {
    font-family: "Josefin Sans", sans-serif;
    font-size: 1.6rem;
    text-align: center;
    padding: 1.25rem;
    background-color: #101d2c;
    color: #fff;
    font-weight: 400;
    grid-column: 1/-1;
    width: 80%;
    justify-self: center;
    grid-row: 1/2;
    z-index: 3;
    -ms-flex-item-align: end;
        align-self: end;
    -webkit-transform: translateY(50%);
            transform: translateY(50%); }
  .home__location, .home__rooms {
    margin-top: 2.5rem; }
  .home__location, .home__rooms, .home__area, .home__price {
    font-size: 1.5rem;
    margin-left: 2rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .home__location svg, .home__rooms svg, .home__area svg, .home__price svg {
      fill: #c69963;
      height: 2rem;
      width: 2rem;
      margin-right: 1rem; }
  .home__btn {
    grid-column: 1/-1; }

.gallery {
  background-color: #f9f7f6;
  grid-column: full-start / full-end;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  /* We use vw as reference because it's better to reduce relative to the viewport. */
  grid-template-rows: repeat(7, 5vw);
  gap: 1.5rem;
  padding: 1.5rem;
  /* We use this parent element to wrap img element because we want to use object-fit property. */ }
  .gallery__item--1 {
    grid-area: 1/1/3/3; }
  .gallery__item--2 {
    grid-area: 1/3/4/6; }
  .gallery__item--3 {
    grid-area: 1/6/3/7; }
  .gallery__item--4 {
    grid-area: 1/7/3/9; }
  .gallery__item--5 {
    grid-area: 3/1/6/3; }
  .gallery__item--6 {
    grid-area: 4/3/6/5; }
  .gallery__item--7 {
    grid-area: 4/5/5/6; }
  .gallery__item--8 {
    grid-area: 3/6/5/8; }
  .gallery__item--9 {
    grid-area: 3/8/6/9; }
  .gallery__item--10 {
    grid-area: 6/1/8/2; }
  .gallery__item--11 {
    grid-area: 6/2/8/4; }
  .gallery__item--12 {
    grid-area: 6/4/8/5; }
  .gallery__item--13 {
    grid-area: 5/5/8/8; }
  .gallery__item--14 {
    grid-area: 6/8/8/9; }
  .gallery__img {
    /* MUST explicitly set width & height values when using object-fit.
    If we don't use object-fit but only setting width & height to 100%, it will fit, but loses its aspect ratio.*/
    -o-object-fit: cover;
       object-fit: cover;
    width: 100%;
    height: 100%;
    /* We have to set block because image is treated as inline element. If not, it will leave tiny white space at the bottom of its parent element. */
    display: block; }

/* ########################## Regarding media query ######################### */
/* Reply from teaching assistant:

I would choose to forgo displaying the gallery entirely on mobile devices (unless you're using the gallery for practical purposes such as linking to another page / displaying important information).  If you wanted to display the images, I would display the images in a single column on mobile devices, then, at a particular breakpoint, apply the appropriate grid styling to display the gallery in all its beauty. */
.footer {
  background-color: #101d2c;
  grid-column: full-start / full-end;
  padding: 6rem; }

.nav {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
  gap: 2rem;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  /* At different width of viewport, we change the column numbers. This work well when we have even number of items using the auto-implicit-row-placement algorithm. */ }
  @media only screen and (max-width: 62.5em) {
    .nav {
      grid-template-columns: repeat(3, minmax(15rem, 1fr)); } }
  @media only screen and (max-width: 37.5em) {
    .nav {
      grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr)); } }
  .nav__link:link, .nav__link:visited {
    font-family: "Josefin Sans", sans-serif;
    text-decoration: none;
    color: #fff;
    font-size: 1.4rem;
    text-transform: uppercase;
    text-align: center;
    padding: 1rem;
    display: block;
    -webkit-transition: all 0.2s;
    transition: all 0.2s; }
  .nav__link:hover, .nav__link:active {
    background-color: rgba(255, 255, 255, 0.1);
    -webkit-transform: translateY(-3px);
            transform: translateY(-3px); }

.copyright {
  font-size: 1.4rem;
  color: #aaa;
  text-align: center;
  margin-top: 6rem; }

/*# sourceMappingURL=data:application/json;base64, */